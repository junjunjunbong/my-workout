my-workout 2.0: 차세대 워크아웃 트래킹 플랫폼 제품 요구사항 명세서 (PRD)
1. 개요 (Overview)

1.1. 배경 (Background)
현재 my-workout 애플리케이션은 React와 FastAPI를 기반으로 한 개인용 워크아웃 트래킹 시스템으로 성공적으로 구축되었습니다. 핵심 기능(운동 기록, 루틴 관리, AI 기반 루틴 생성)은 개인 사용자에게 훌륭한 가치를 제공합니다.

1.2. 비전 (Vision)
my-workout 2.0은 개인용 로컬 애플리케이션을 넘어, 여러 사용자가 함께 소통하며 동기를 부여받고, 더욱 체계적이고 깊이 있는 데이터 분석을 통해 운동 목표를 달성할 수 있도록 돕는 확장 가능한 소셜 피트니스 플랫폼으로 진화하는 것을 목표로 합니다.

2. 목표 (Goals)

주요 목표 (Primary Goals)

확장성 확보: 다중 사용자를 지원하고 안정적인 데이터 관리가 가능한 데이터베이스 시스템 도입

사용자 기반 성장: 회원가입 및 프로필 기능을 통해 사용자 기반을 확대하고 개인화된 경험 제공

사용자 참여(Engagement) 증대: 소셜 기능을 도입하여 사용자 간의 상호작용 및 운동 동기 부여 강화

부차적 목표 (Secondary Goals)

고도화된 분석 기능을 통한 사용자 만족도 증대

모바일 환경에서의 사용성 개선

안정적인 서비스 운영을 위한 배포 및 관리 체계 구축

3. 타겟 사용자 (Target Audience)

꾸준한 기록을 통해 성장하려는 헬스 초/중급자: 자신의 운동 기록을 체계적으로 관리하고, 다른 사람들의 운동 루틴을 참고하여 동기를 얻고 싶은 사용자.

데이터 기반의 체계적인 훈련을 원하는 사용자: 개인 최고 기록(PR), 운동 볼륨, 부위별 분석 등 상세한 데이터를 통해 자신의 성장을 추적하고, AI의 도움을 받아 훈련 계획을 세우고 싶은 사용자.

4. 핵심 기능 요구사항 (Core Feature Requirements)

4.1. 사용자 인증 및 프로필 시스템 (User Authentication & Profile System)

기능:

이메일/비밀번호 기반의 회원가입 및 로그인 기능

소셜 로그인 (Google, Kakao 등) 연동 기능

사용자 프로필 페이지 (프로필 사진, 자기소개, 운동 목표 설정)

비밀번호 찾기 및 재설정 기능

요구사항:

비밀번호는 안전하게 해싱(hashing)하여 데이터베이스에 저장해야 합니다.

로그인 상태 유지를 위해 JWT(JSON Web Token) 또는 세션 기반 인증을 사용합니다.

4.2. 데이터베이스 시스템 마이그레이션 (Database System Migration)

기능:

기존 JSON 파일 기반 저장소를 관계형 데이터베이스(RDBMS)로 전환합니다. (예: PostgreSQL, MySQL 또는 SQLite로 시작)

사용자, 운동 기록, 루틴, 운동 종류 등 모든 데이터는 DB를 통해 관리됩니다.

요구사항:

데이터 무결성과 일관성을 보장해야 합니다.

사용자 증가에 따른 데이터 조회 및 쓰기 성능 저하가 없어야 합니다.

기존 workouts.json, routines.json 데이터를 새 DB 구조로 마이그레이션하는 스크립트가 필요합니다.

4.3. 소셜 기능 (Social Features)

기능:

친구(팔로우/팔로잉) 시스템: 다른 사용자를 팔로우하고 내 활동을 공유할 수 있습니다.

피드(Feed): 내가 팔로우하는 사용자들의 운동 완료 기록, 루틴 생성 등의 활동을 볼 수 있는 피드 페이지를 제공합니다.

운동 기록 공유: 자신의 운동 기록을 피드에 공유하거나 특정 친구에게만 공유할 수 있습니다.

'좋아요' 및 댓글: 다른 사용자의 활동에 '좋아요'를 누르거나 댓글을 작성하여 소통할 수 있습니다.

요구사항:

피드는 최신 활동 순으로 정렬되어야 하며, 무한 스크롤을 지원해야 합니다.

4.4. 고급 분석 및 대시보드 (Advanced Analytics & Dashboard)

기능:

개인 기록(PR) 트래킹: 특정 운동(예: 벤치프레스, 스쿼트, 데드리프트)의 최고 중량(1RM) 변화를 차트로 시각화합니다.

근육 부위별 분석: 주간/월간/연간 단위로 어떤 근육 부위를 얼마나 운동했는지 분석하여 시각화합니다. (예: 원형 차트)

운동별 상세 분석: 특정 운동의 볼륨(세트 x 반복 x 중량) 및 중량 변화 추이를 기간별로 조회할 수 있습니다.

요구사항:

사용자가 직접 기간을 설정하여 데이터를 조회할 수 있어야 합니다.

모든 차트는 Recharts를 활용하여 반응형으로 구현합니다.

4.5. AI 코치 고도화 (Advanced AI Coach)

기능:

개인화된 루틴 조정 제안: 사용자의 최근 운동 기록(볼륨, 빈도, 강도)을 분석하여 "이번 주에는 볼륨을 5% 늘려보세요" 또는 "가슴 운동 후 충분한 휴식이 필요합니다" 와 같은 구체적인 조언을 제공합니다.

정체기 극복 프로그램 추천: 사용자의 운동 기록이 일정 기간 정체 상태일 경우, 이를 감지하고 정체기 탈출을 위한 새로운 루틴(예: 드롭 세트, 피라미드 세트 포함)을 추천합니다.

요구사항:

AI 기능은 사용자의 누적된 데이터를 기반으로 해야 하므로, 최소한의 데이터가 쌓여야 활성화됩니다.

4.6. 반응형 웹 디자인 (Responsive Web Design)

기능:

웹 애플리케이션의 모든 페이지가 데스크톱, 태블릿, 모바일 등 다양한 화면 크기에서 최적화된 레이아웃을 보여주도록 합니다.

요구사항:

Material UI의 Grid 시스템과 반응형 유틸리티를 적극 활용합니다.

모바일 환경에서는 터치 인터페이스에 최적화된 UI/UX를 제공합니다.

5. 비기능적 요구사항 (Non-Functional Requirements)

성능 (Performance):

API 평균 응답 시간: 200ms 이하

페이지 로드 시간 (LCP): 2.5초 이하

확장성 (Scalability):

애플리케이션 아키텍처는 향후 10,000명 이상의 사용자를 수용할 수 있도록 설계되어야 합니다.

보안 (Security):

SQL Injection, XSS 등 주요 웹 취약점에 대한 방어 조치가 필요합니다.

모든 API 요청은 인증된 사용자만 접근 가능하도록 제어해야 합니다.

운영/배포 (Operations/Deployment):

Backend(FastAPI)와 Frontend(React)를 Docker 컨테이너화하여 배포 일관성을 확보합니다.

CI/CD 파이프라인(예: GitHub Actions)을 구축하여 코드 변경 시 자동화된 테스트 및 배포를 지원합니다.

6. 성공 지표 (Success Metrics)

가입자 수 (User Acquisition): 주간/월간 신규 가입자 수

활성 사용자 (User Engagement): 일일/주간/월간 활성 사용자 수 (DAU/WAU/MAU)

핵심 기능 사용률 (Feature Adoption): 주간 평균 운동 기록 생성 수, 소셜 피드 내 '좋아요'/댓글 수

사용자 유지율 (User Retention): 가입 후 1주/4주/12주차 재방문율

7. 향후 고려사항 (Future Considerations)

네이티브 모바일 앱 개발 (React Native): 푸시 알림, GPS 기반 달리기 기록 등 모바일 고유 기능을 활용한 앱 개발.

웨어러블 디바이스 연동: Apple Watch, Galaxy Watch 등과 연동하여 심박수, 소모 칼로리 데이터 자동 기록.

프리미엄 구독 모델: 고급 AI 분석, 맞춤형 장기 플랜 제공 등 유료 기능을 통한 수익 모델 구축.